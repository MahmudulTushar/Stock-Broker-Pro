<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA7BJREFUOE9tkklQ
        23UUx7/j6EVnPDijXnr1oIdePOjJ5eaoYDu1naJoCyUsIWAgDRBTZA1JyA6EQEgJEMJSymIWQkIghFCg
        FEiBEKAFktRqWaakCOgUIc8/pQcPvpk37/L7fH/ft0DnWofZ9wh6dxjlPcsX0vQzZr7p/mR63d1bbN3E
        tTrHA5g966izr0DePYfCprvIrR1FktyLF9HijaBhOPxGcv3sYstwiMTdQRKa7m+KOufJOLhGbO3Yhta2
        dKbZvYqqvgBKW++BpxsFS+07FdC6QshsnFtR25epyrGqebxzePHgH0p7vHN0Xt6zeEPU7ieubiyq6l14
        RWddQrl5GrxaL1KVLx1kGueutnrCVD2wJj88JvH2fiyysRvb/SMaizz9iySK7gWO1rJIrEqnpL5/5dRB
        7QhYipFTBz81zVmLOwNHm38en9vei4UZmH6Pxij89IjWt47Dmwf0JafKE8pSu3/TWYMobp5Ebo0HV8Qu
        vP7m24CwPbDCb/HP7x9SBgPv/Qemh1vHe6EoZSZLHbcFeh/VnMygeQLXtR5cFVmRLHICvGa/T9Di39l7
        Tl8xcPjlzycwBTeOw5EoxaVUOmZyqtzP1Lfn8EvjBPhMC2mVDrDEViDLMF1U1/+AGt2hpK19kjG2Iwy8
        y8CR1W2Sm4ZCn1eYp+gcv80k75zFzwYfeNUesJUupEn7AZUl+Fqh2X9Y2Drzd7s3Ev9kn+JCO8QORym+
        w/vok2yN+4nRuUwX8zulfO3QWwL9KLgaN9gKJ9hypoWb7jUkqbwfFpmmSdMXoFTV8GSKbLAhWeIYEbXd
        o9KmO1RvD1KNbYmyFK7nl4VdH/FqhsFRDiBTPgAoexdhcK6ismv+nW9LbCaBYTxW0jJJBfWjdEnYZeEo
        Bs6kVFifVfYsUUnHAnHVLvqG25TIUTqRLrEBpW2zJzCUPQFUW4LQ9AYgMNyBihmY/NYsKlqn8WOZ7QNG
        6KCkzU/5xiniVg3ShVxjRYqYEeA1jCPfMIE8wzgKmMzTj6HgRfpQUO9Dns4LvnYEqVL7u98JOiI3jJOU
        XTNCwptjFMeuk4KjY9ZimEIu8/A6c+M5Wi+yNEPIZjKHORhu9TCy1S5kqZy4Vv7rq/GZ+lGhwUelzGYS
        800P8f6nCXjv43P4QeZDgsiFy6JBpg7i+zIHksR2sCQOpMsGkCFzgC2zMyJ9OJ/doEjgGVe/Tq394vSe
        /yfOfnYJiUW9uFLcjeSyPrAqLEiTWJAqPqlWplqRIbXhXzTMQ4jRHOMnAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="dgvExtension.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>83</value>
  </metadata>
</root>