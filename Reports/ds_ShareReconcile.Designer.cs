//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_ShareReconcile")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_ShareReconcile : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private CompanyWise_ShareReconcilationDataTable tableCompanyWise_ShareReconcilation;
        
        private CustomerWise_ShareReconcilationDataTable tableCustomerWise_ShareReconcilation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_ShareReconcile() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_ShareReconcile(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["CompanyWise_ShareReconcilation"] != null)) {
                    base.Tables.Add(new CompanyWise_ShareReconcilationDataTable(ds.Tables["CompanyWise_ShareReconcilation"]));
                }
                if ((ds.Tables["CustomerWise_ShareReconcilation"] != null)) {
                    base.Tables.Add(new CustomerWise_ShareReconcilationDataTable(ds.Tables["CustomerWise_ShareReconcilation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyWise_ShareReconcilationDataTable CompanyWise_ShareReconcilation {
            get {
                return this.tableCompanyWise_ShareReconcilation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerWise_ShareReconcilationDataTable CustomerWise_ShareReconcilation {
            get {
                return this.tableCustomerWise_ShareReconcilation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_ShareReconcile cln = ((ds_ShareReconcile)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["CompanyWise_ShareReconcilation"] != null)) {
                    base.Tables.Add(new CompanyWise_ShareReconcilationDataTable(ds.Tables["CompanyWise_ShareReconcilation"]));
                }
                if ((ds.Tables["CustomerWise_ShareReconcilation"] != null)) {
                    base.Tables.Add(new CustomerWise_ShareReconcilationDataTable(ds.Tables["CustomerWise_ShareReconcilation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tableCompanyWise_ShareReconcilation = ((CompanyWise_ShareReconcilationDataTable)(base.Tables["CompanyWise_ShareReconcilation"]));
            if ((initTable == true)) {
                if ((this.tableCompanyWise_ShareReconcilation != null)) {
                    this.tableCompanyWise_ShareReconcilation.InitVars();
                }
            }
            this.tableCustomerWise_ShareReconcilation = ((CustomerWise_ShareReconcilationDataTable)(base.Tables["CustomerWise_ShareReconcilation"]));
            if ((initTable == true)) {
                if ((this.tableCustomerWise_ShareReconcilation != null)) {
                    this.tableCustomerWise_ShareReconcilation.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_ShareReconcile";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_ShareReconcile.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tableCompanyWise_ShareReconcilation = new CompanyWise_ShareReconcilationDataTable();
            base.Tables.Add(this.tableCompanyWise_ShareReconcilation);
            this.tableCustomerWise_ShareReconcilation = new CustomerWise_ShareReconcilationDataTable();
            base.Tables.Add(this.tableCustomerWise_ShareReconcilation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompanyWise_ShareReconcilation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerWise_ShareReconcilation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_ShareReconcile ds = new ds_ShareReconcile();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        public delegate void CompanyWise_ShareReconcilationRowChangeEventHandler(object sender, CompanyWise_ShareReconcilationRowChangeEvent e);
        
        public delegate void CustomerWise_ShareReconcilationRowChangeEventHandler(object sender, CustomerWise_ShareReconcilationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnCDBL_CustCode;
            
            private global::System.Data.DataColumn columnCDBL_Company;
            
            private global::System.Data.DataColumn columnCDBL_Share;
            
            private global::System.Data.DataColumn columnCDBL_UnlockBalance;
            
            private global::System.Data.DataColumn columnBackOffice_CustCode;
            
            private global::System.Data.DataColumn columnBackOffice_ShortCode;
            
            private global::System.Data.DataColumn columnBackOffice_Share;
            
            private global::System.Data.DataColumn columnBackOffice_MShare;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnOrder_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_CustCodeColumn {
                get {
                    return this.columnCDBL_CustCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_CompanyColumn {
                get {
                    return this.columnCDBL_Company;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_ShareColumn {
                get {
                    return this.columnCDBL_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_UnlockBalanceColumn {
                get {
                    return this.columnCDBL_UnlockBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_CustCodeColumn {
                get {
                    return this.columnBackOffice_CustCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ShortCodeColumn {
                get {
                    return this.columnBackOffice_ShortCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ShareColumn {
                get {
                    return this.columnBackOffice_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_MShareColumn {
                get {
                    return this.columnBackOffice_MShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Order_IdColumn {
                get {
                    return this.columnOrder_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row AddDataTable1Row(string CDBL_CustCode, string CDBL_Company, double CDBL_Share, double CDBL_UnlockBalance, string BackOffice_CustCode, string BackOffice_ShortCode, double BackOffice_Share, double BackOffice_MShare, string Comment, int Order_Id) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CDBL_CustCode,
                        CDBL_Company,
                        CDBL_Share,
                        CDBL_UnlockBalance,
                        BackOffice_CustCode,
                        BackOffice_ShortCode,
                        BackOffice_Share,
                        BackOffice_MShare,
                        Comment,
                        Order_Id};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCDBL_CustCode = base.Columns["CDBL_CustCode"];
                this.columnCDBL_Company = base.Columns["CDBL_Company"];
                this.columnCDBL_Share = base.Columns["CDBL_Share"];
                this.columnCDBL_UnlockBalance = base.Columns["CDBL_UnlockBalance"];
                this.columnBackOffice_CustCode = base.Columns["BackOffice_CustCode"];
                this.columnBackOffice_ShortCode = base.Columns["BackOffice_ShortCode"];
                this.columnBackOffice_Share = base.Columns["BackOffice_Share"];
                this.columnBackOffice_MShare = base.Columns["BackOffice_MShare"];
                this.columnComment = base.Columns["Comment"];
                this.columnOrder_Id = base.Columns["Order_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCDBL_CustCode = new global::System.Data.DataColumn("CDBL_CustCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_CustCode);
                this.columnCDBL_Company = new global::System.Data.DataColumn("CDBL_Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_Company);
                this.columnCDBL_Share = new global::System.Data.DataColumn("CDBL_Share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_Share);
                this.columnCDBL_UnlockBalance = new global::System.Data.DataColumn("CDBL_UnlockBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_UnlockBalance);
                this.columnBackOffice_CustCode = new global::System.Data.DataColumn("BackOffice_CustCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_CustCode);
                this.columnBackOffice_ShortCode = new global::System.Data.DataColumn("BackOffice_ShortCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_ShortCode);
                this.columnBackOffice_Share = new global::System.Data.DataColumn("BackOffice_Share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_Share);
                this.columnBackOffice_MShare = new global::System.Data.DataColumn("BackOffice_MShare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_MShare);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnOrder_Id = new global::System.Data.DataColumn("Order_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_ShareReconcile ds = new ds_ShareReconcile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyWise_ShareReconcilationDataTable : global::System.Data.TypedTableBase<CompanyWise_ShareReconcilationRow> {
            
            private global::System.Data.DataColumn columnISIN_No;
            
            private global::System.Data.DataColumn columnAll_Comp_Short_Code;
            
            private global::System.Data.DataColumn columnAll_Comp_Name;
            
            private global::System.Data.DataColumn columnCDBL_CustCode;
            
            private global::System.Data.DataColumn columnCDBL_ISIN;
            
            private global::System.Data.DataColumn columnCDBL_Company;
            
            private global::System.Data.DataColumn columnCDBL_Share;
            
            private global::System.Data.DataColumn columnCDBL_UnlockBalance;
            
            private global::System.Data.DataColumn columnBackOffice_CustCode;
            
            private global::System.Data.DataColumn columnBackOffice_ISIN_No;
            
            private global::System.Data.DataColumn columnBackOffice_ShortCode;
            
            private global::System.Data.DataColumn columnBackOffice_Share;
            
            private global::System.Data.DataColumn columnBackOffice_MShare;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnOrder_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyWise_ShareReconcilationDataTable() {
                this.TableName = "CompanyWise_ShareReconcilation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyWise_ShareReconcilationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyWise_ShareReconcilationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISIN_NoColumn {
                get {
                    return this.columnISIN_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn All_Comp_Short_CodeColumn {
                get {
                    return this.columnAll_Comp_Short_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn All_Comp_NameColumn {
                get {
                    return this.columnAll_Comp_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_CustCodeColumn {
                get {
                    return this.columnCDBL_CustCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_ISINColumn {
                get {
                    return this.columnCDBL_ISIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_CompanyColumn {
                get {
                    return this.columnCDBL_Company;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_ShareColumn {
                get {
                    return this.columnCDBL_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_UnlockBalanceColumn {
                get {
                    return this.columnCDBL_UnlockBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_CustCodeColumn {
                get {
                    return this.columnBackOffice_CustCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ISIN_NoColumn {
                get {
                    return this.columnBackOffice_ISIN_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ShortCodeColumn {
                get {
                    return this.columnBackOffice_ShortCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ShareColumn {
                get {
                    return this.columnBackOffice_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_MShareColumn {
                get {
                    return this.columnBackOffice_MShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Order_IdColumn {
                get {
                    return this.columnOrder_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyWise_ShareReconcilationRow this[int index] {
                get {
                    return ((CompanyWise_ShareReconcilationRow)(this.Rows[index]));
                }
            }
            
            public event CompanyWise_ShareReconcilationRowChangeEventHandler CompanyWise_ShareReconcilationRowChanging;
            
            public event CompanyWise_ShareReconcilationRowChangeEventHandler CompanyWise_ShareReconcilationRowChanged;
            
            public event CompanyWise_ShareReconcilationRowChangeEventHandler CompanyWise_ShareReconcilationRowDeleting;
            
            public event CompanyWise_ShareReconcilationRowChangeEventHandler CompanyWise_ShareReconcilationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyWise_ShareReconcilationRow(CompanyWise_ShareReconcilationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyWise_ShareReconcilationRow AddCompanyWise_ShareReconcilationRow(string ISIN_No, string All_Comp_Short_Code, string All_Comp_Name, string CDBL_CustCode, string CDBL_ISIN, string CDBL_Company, double CDBL_Share, double CDBL_UnlockBalance, string BackOffice_CustCode, string BackOffice_ISIN_No, string BackOffice_ShortCode, double BackOffice_Share, double BackOffice_MShare, string Comment, int Order_Id) {
                CompanyWise_ShareReconcilationRow rowCompanyWise_ShareReconcilationRow = ((CompanyWise_ShareReconcilationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ISIN_No,
                        All_Comp_Short_Code,
                        All_Comp_Name,
                        CDBL_CustCode,
                        CDBL_ISIN,
                        CDBL_Company,
                        CDBL_Share,
                        CDBL_UnlockBalance,
                        BackOffice_CustCode,
                        BackOffice_ISIN_No,
                        BackOffice_ShortCode,
                        BackOffice_Share,
                        BackOffice_MShare,
                        Comment,
                        Order_Id};
                rowCompanyWise_ShareReconcilationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyWise_ShareReconcilationRow);
                return rowCompanyWise_ShareReconcilationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyWise_ShareReconcilationDataTable cln = ((CompanyWise_ShareReconcilationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyWise_ShareReconcilationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnISIN_No = base.Columns["ISIN_No"];
                this.columnAll_Comp_Short_Code = base.Columns["All_Comp_Short_Code"];
                this.columnAll_Comp_Name = base.Columns["All_Comp_Name"];
                this.columnCDBL_CustCode = base.Columns["CDBL_CustCode"];
                this.columnCDBL_ISIN = base.Columns["CDBL_ISIN"];
                this.columnCDBL_Company = base.Columns["CDBL_Company"];
                this.columnCDBL_Share = base.Columns["CDBL_Share"];
                this.columnCDBL_UnlockBalance = base.Columns["CDBL_UnlockBalance"];
                this.columnBackOffice_CustCode = base.Columns["BackOffice_CustCode"];
                this.columnBackOffice_ISIN_No = base.Columns["BackOffice_ISIN_No"];
                this.columnBackOffice_ShortCode = base.Columns["BackOffice_ShortCode"];
                this.columnBackOffice_Share = base.Columns["BackOffice_Share"];
                this.columnBackOffice_MShare = base.Columns["BackOffice_MShare"];
                this.columnComment = base.Columns["Comment"];
                this.columnOrder_Id = base.Columns["Order_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnISIN_No = new global::System.Data.DataColumn("ISIN_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISIN_No);
                this.columnAll_Comp_Short_Code = new global::System.Data.DataColumn("All_Comp_Short_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAll_Comp_Short_Code);
                this.columnAll_Comp_Name = new global::System.Data.DataColumn("All_Comp_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAll_Comp_Name);
                this.columnCDBL_CustCode = new global::System.Data.DataColumn("CDBL_CustCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_CustCode);
                this.columnCDBL_ISIN = new global::System.Data.DataColumn("CDBL_ISIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_ISIN);
                this.columnCDBL_Company = new global::System.Data.DataColumn("CDBL_Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_Company);
                this.columnCDBL_Share = new global::System.Data.DataColumn("CDBL_Share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_Share);
                this.columnCDBL_UnlockBalance = new global::System.Data.DataColumn("CDBL_UnlockBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_UnlockBalance);
                this.columnBackOffice_CustCode = new global::System.Data.DataColumn("BackOffice_CustCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_CustCode);
                this.columnBackOffice_ISIN_No = new global::System.Data.DataColumn("BackOffice_ISIN_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_ISIN_No);
                this.columnBackOffice_ShortCode = new global::System.Data.DataColumn("BackOffice_ShortCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_ShortCode);
                this.columnBackOffice_Share = new global::System.Data.DataColumn("BackOffice_Share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_Share);
                this.columnBackOffice_MShare = new global::System.Data.DataColumn("BackOffice_MShare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_MShare);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnOrder_Id = new global::System.Data.DataColumn("Order_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyWise_ShareReconcilationRow NewCompanyWise_ShareReconcilationRow() {
                return ((CompanyWise_ShareReconcilationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyWise_ShareReconcilationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyWise_ShareReconcilationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyWise_ShareReconcilationRowChanged != null)) {
                    this.CompanyWise_ShareReconcilationRowChanged(this, new CompanyWise_ShareReconcilationRowChangeEvent(((CompanyWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyWise_ShareReconcilationRowChanging != null)) {
                    this.CompanyWise_ShareReconcilationRowChanging(this, new CompanyWise_ShareReconcilationRowChangeEvent(((CompanyWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyWise_ShareReconcilationRowDeleted != null)) {
                    this.CompanyWise_ShareReconcilationRowDeleted(this, new CompanyWise_ShareReconcilationRowChangeEvent(((CompanyWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyWise_ShareReconcilationRowDeleting != null)) {
                    this.CompanyWise_ShareReconcilationRowDeleting(this, new CompanyWise_ShareReconcilationRowChangeEvent(((CompanyWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyWise_ShareReconcilationRow(CompanyWise_ShareReconcilationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_ShareReconcile ds = new ds_ShareReconcile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyWise_ShareReconcilationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerWise_ShareReconcilationDataTable : global::System.Data.TypedTableBase<CustomerWise_ShareReconcilationRow> {
            
            private global::System.Data.DataColumn columnAll_Cust_Code;
            
            private global::System.Data.DataColumn columnAll_Cust_Name;
            
            private global::System.Data.DataColumn columnCDBL_CustCode;
            
            private global::System.Data.DataColumn columnCDBL_ISIN;
            
            private global::System.Data.DataColumn columnCDBL_Company;
            
            private global::System.Data.DataColumn columnCDBL_Share;
            
            private global::System.Data.DataColumn columnCDBL_UnlockBalance;
            
            private global::System.Data.DataColumn columnBackOffice_CustCode;
            
            private global::System.Data.DataColumn columnBackOffice_ISIN_No;
            
            private global::System.Data.DataColumn columnBackOffice_ShortCode;
            
            private global::System.Data.DataColumn columnBackOffice_Share;
            
            private global::System.Data.DataColumn columnBackOffice_MShare;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnOrder_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerWise_ShareReconcilationDataTable() {
                this.TableName = "CustomerWise_ShareReconcilation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerWise_ShareReconcilationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerWise_ShareReconcilationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn All_Cust_CodeColumn {
                get {
                    return this.columnAll_Cust_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn All_Cust_NameColumn {
                get {
                    return this.columnAll_Cust_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_CustCodeColumn {
                get {
                    return this.columnCDBL_CustCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_ISINColumn {
                get {
                    return this.columnCDBL_ISIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_CompanyColumn {
                get {
                    return this.columnCDBL_Company;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_ShareColumn {
                get {
                    return this.columnCDBL_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDBL_UnlockBalanceColumn {
                get {
                    return this.columnCDBL_UnlockBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_CustCodeColumn {
                get {
                    return this.columnBackOffice_CustCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ISIN_NoColumn {
                get {
                    return this.columnBackOffice_ISIN_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ShortCodeColumn {
                get {
                    return this.columnBackOffice_ShortCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_ShareColumn {
                get {
                    return this.columnBackOffice_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BackOffice_MShareColumn {
                get {
                    return this.columnBackOffice_MShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Order_IdColumn {
                get {
                    return this.columnOrder_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerWise_ShareReconcilationRow this[int index] {
                get {
                    return ((CustomerWise_ShareReconcilationRow)(this.Rows[index]));
                }
            }
            
            public event CustomerWise_ShareReconcilationRowChangeEventHandler CustomerWise_ShareReconcilationRowChanging;
            
            public event CustomerWise_ShareReconcilationRowChangeEventHandler CustomerWise_ShareReconcilationRowChanged;
            
            public event CustomerWise_ShareReconcilationRowChangeEventHandler CustomerWise_ShareReconcilationRowDeleting;
            
            public event CustomerWise_ShareReconcilationRowChangeEventHandler CustomerWise_ShareReconcilationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerWise_ShareReconcilationRow(CustomerWise_ShareReconcilationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerWise_ShareReconcilationRow AddCustomerWise_ShareReconcilationRow(string All_Cust_Code, string All_Cust_Name, string CDBL_CustCode, string CDBL_ISIN, string CDBL_Company, double CDBL_Share, double CDBL_UnlockBalance, string BackOffice_CustCode, string BackOffice_ISIN_No, string BackOffice_ShortCode, double BackOffice_Share, double BackOffice_MShare, string Comment, int Order_Id) {
                CustomerWise_ShareReconcilationRow rowCustomerWise_ShareReconcilationRow = ((CustomerWise_ShareReconcilationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        All_Cust_Code,
                        All_Cust_Name,
                        CDBL_CustCode,
                        CDBL_ISIN,
                        CDBL_Company,
                        CDBL_Share,
                        CDBL_UnlockBalance,
                        BackOffice_CustCode,
                        BackOffice_ISIN_No,
                        BackOffice_ShortCode,
                        BackOffice_Share,
                        BackOffice_MShare,
                        Comment,
                        Order_Id};
                rowCustomerWise_ShareReconcilationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerWise_ShareReconcilationRow);
                return rowCustomerWise_ShareReconcilationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerWise_ShareReconcilationDataTable cln = ((CustomerWise_ShareReconcilationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerWise_ShareReconcilationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAll_Cust_Code = base.Columns["All_Cust_Code"];
                this.columnAll_Cust_Name = base.Columns["All_Cust_Name"];
                this.columnCDBL_CustCode = base.Columns["CDBL_CustCode"];
                this.columnCDBL_ISIN = base.Columns["CDBL_ISIN"];
                this.columnCDBL_Company = base.Columns["CDBL_Company"];
                this.columnCDBL_Share = base.Columns["CDBL_Share"];
                this.columnCDBL_UnlockBalance = base.Columns["CDBL_UnlockBalance"];
                this.columnBackOffice_CustCode = base.Columns["BackOffice_CustCode"];
                this.columnBackOffice_ISIN_No = base.Columns["BackOffice_ISIN_No"];
                this.columnBackOffice_ShortCode = base.Columns["BackOffice_ShortCode"];
                this.columnBackOffice_Share = base.Columns["BackOffice_Share"];
                this.columnBackOffice_MShare = base.Columns["BackOffice_MShare"];
                this.columnComment = base.Columns["Comment"];
                this.columnOrder_Id = base.Columns["Order_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAll_Cust_Code = new global::System.Data.DataColumn("All_Cust_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAll_Cust_Code);
                this.columnAll_Cust_Name = new global::System.Data.DataColumn("All_Cust_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAll_Cust_Name);
                this.columnCDBL_CustCode = new global::System.Data.DataColumn("CDBL_CustCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_CustCode);
                this.columnCDBL_ISIN = new global::System.Data.DataColumn("CDBL_ISIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_ISIN);
                this.columnCDBL_Company = new global::System.Data.DataColumn("CDBL_Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_Company);
                this.columnCDBL_Share = new global::System.Data.DataColumn("CDBL_Share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_Share);
                this.columnCDBL_UnlockBalance = new global::System.Data.DataColumn("CDBL_UnlockBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDBL_UnlockBalance);
                this.columnBackOffice_CustCode = new global::System.Data.DataColumn("BackOffice_CustCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_CustCode);
                this.columnBackOffice_ISIN_No = new global::System.Data.DataColumn("BackOffice_ISIN_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_ISIN_No);
                this.columnBackOffice_ShortCode = new global::System.Data.DataColumn("BackOffice_ShortCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_ShortCode);
                this.columnBackOffice_Share = new global::System.Data.DataColumn("BackOffice_Share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_Share);
                this.columnBackOffice_MShare = new global::System.Data.DataColumn("BackOffice_MShare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackOffice_MShare);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnOrder_Id = new global::System.Data.DataColumn("Order_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerWise_ShareReconcilationRow NewCustomerWise_ShareReconcilationRow() {
                return ((CustomerWise_ShareReconcilationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerWise_ShareReconcilationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerWise_ShareReconcilationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerWise_ShareReconcilationRowChanged != null)) {
                    this.CustomerWise_ShareReconcilationRowChanged(this, new CustomerWise_ShareReconcilationRowChangeEvent(((CustomerWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerWise_ShareReconcilationRowChanging != null)) {
                    this.CustomerWise_ShareReconcilationRowChanging(this, new CustomerWise_ShareReconcilationRowChangeEvent(((CustomerWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerWise_ShareReconcilationRowDeleted != null)) {
                    this.CustomerWise_ShareReconcilationRowDeleted(this, new CustomerWise_ShareReconcilationRowChangeEvent(((CustomerWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerWise_ShareReconcilationRowDeleting != null)) {
                    this.CustomerWise_ShareReconcilationRowDeleting(this, new CustomerWise_ShareReconcilationRowChangeEvent(((CustomerWise_ShareReconcilationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerWise_ShareReconcilationRow(CustomerWise_ShareReconcilationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_ShareReconcile ds = new ds_ShareReconcile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerWise_ShareReconcilationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_CustCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CDBL_CustCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_CustCode\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CDBL_CustCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_Company {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CDBL_CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_Company\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CDBL_CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CDBL_Share {
                get {
                    try {
                        return ((double)(this[this.tableDataTable1.CDBL_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_Share\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CDBL_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CDBL_UnlockBalance {
                get {
                    try {
                        return ((double)(this[this.tableDataTable1.CDBL_UnlockBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_UnlockBalance\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CDBL_UnlockBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_CustCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.BackOffice_CustCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_CustCode\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BackOffice_CustCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_ShortCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.BackOffice_ShortCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_ShortCode\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BackOffice_ShortCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BackOffice_Share {
                get {
                    try {
                        return ((double)(this[this.tableDataTable1.BackOffice_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_Share\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BackOffice_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BackOffice_MShare {
                get {
                    try {
                        return ((double)(this[this.tableDataTable1.BackOffice_MShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_MShare\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BackOffice_MShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Order_Id {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.Order_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Id\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.Order_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_CustCodeNull() {
                return this.IsNull(this.tableDataTable1.CDBL_CustCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_CustCodeNull() {
                this[this.tableDataTable1.CDBL_CustCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_CompanyNull() {
                return this.IsNull(this.tableDataTable1.CDBL_CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_CompanyNull() {
                this[this.tableDataTable1.CDBL_CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_ShareNull() {
                return this.IsNull(this.tableDataTable1.CDBL_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_ShareNull() {
                this[this.tableDataTable1.CDBL_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_UnlockBalanceNull() {
                return this.IsNull(this.tableDataTable1.CDBL_UnlockBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_UnlockBalanceNull() {
                this[this.tableDataTable1.CDBL_UnlockBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_CustCodeNull() {
                return this.IsNull(this.tableDataTable1.BackOffice_CustCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_CustCodeNull() {
                this[this.tableDataTable1.BackOffice_CustCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ShortCodeNull() {
                return this.IsNull(this.tableDataTable1.BackOffice_ShortCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ShortCodeNull() {
                this[this.tableDataTable1.BackOffice_ShortCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ShareNull() {
                return this.IsNull(this.tableDataTable1.BackOffice_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ShareNull() {
                this[this.tableDataTable1.BackOffice_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_MShareNull() {
                return this.IsNull(this.tableDataTable1.BackOffice_MShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_MShareNull() {
                this[this.tableDataTable1.BackOffice_MShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableDataTable1.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableDataTable1.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrder_IdNull() {
                return this.IsNull(this.tableDataTable1.Order_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrder_IdNull() {
                this[this.tableDataTable1.Order_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyWise_ShareReconcilationRow : global::System.Data.DataRow {
            
            private CompanyWise_ShareReconcilationDataTable tableCompanyWise_ShareReconcilation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyWise_ShareReconcilationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompanyWise_ShareReconcilation = ((CompanyWise_ShareReconcilationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISIN_No {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.ISIN_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISIN_No\' in table \'CompanyWise_ShareReconcilation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.ISIN_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string All_Comp_Short_Code {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.All_Comp_Short_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'All_Comp_Short_Code\' in table \'CompanyWise_ShareReconcilati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.All_Comp_Short_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string All_Comp_Name {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.All_Comp_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'All_Comp_Name\' in table \'CompanyWise_ShareReconcilation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.All_Comp_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_CustCode {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.CDBL_CustCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_CustCode\' in table \'CompanyWise_ShareReconcilation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.CDBL_CustCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_ISIN {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.CDBL_ISINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_ISIN\' in table \'CompanyWise_ShareReconcilation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.CDBL_ISINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_Company {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.CDBL_CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_Company\' in table \'CompanyWise_ShareReconcilation\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.CDBL_CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CDBL_Share {
                get {
                    try {
                        return ((double)(this[this.tableCompanyWise_ShareReconcilation.CDBL_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_Share\' in table \'CompanyWise_ShareReconcilation\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.CDBL_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CDBL_UnlockBalance {
                get {
                    try {
                        return ((double)(this[this.tableCompanyWise_ShareReconcilation.CDBL_UnlockBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_UnlockBalance\' in table \'CompanyWise_ShareReconcilatio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.CDBL_UnlockBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_CustCode {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.BackOffice_CustCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_CustCode\' in table \'CompanyWise_ShareReconcilati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.BackOffice_CustCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_ISIN_No {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.BackOffice_ISIN_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_ISIN_No\' in table \'CompanyWise_ShareReconcilatio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.BackOffice_ISIN_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_ShortCode {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.BackOffice_ShortCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_ShortCode\' in table \'CompanyWise_ShareReconcilat" +
                                "ion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.BackOffice_ShortCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BackOffice_Share {
                get {
                    try {
                        return ((double)(this[this.tableCompanyWise_ShareReconcilation.BackOffice_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_Share\' in table \'CompanyWise_ShareReconcilation\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.BackOffice_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BackOffice_MShare {
                get {
                    try {
                        return ((double)(this[this.tableCompanyWise_ShareReconcilation.BackOffice_MShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_MShare\' in table \'CompanyWise_ShareReconcilation" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.BackOffice_MShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableCompanyWise_ShareReconcilation.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'CompanyWise_ShareReconcilation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Order_Id {
                get {
                    try {
                        return ((int)(this[this.tableCompanyWise_ShareReconcilation.Order_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Id\' in table \'CompanyWise_ShareReconcilation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCompanyWise_ShareReconcilation.Order_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISIN_NoNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.ISIN_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISIN_NoNull() {
                this[this.tableCompanyWise_ShareReconcilation.ISIN_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAll_Comp_Short_CodeNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.All_Comp_Short_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAll_Comp_Short_CodeNull() {
                this[this.tableCompanyWise_ShareReconcilation.All_Comp_Short_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAll_Comp_NameNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.All_Comp_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAll_Comp_NameNull() {
                this[this.tableCompanyWise_ShareReconcilation.All_Comp_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_CustCodeNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.CDBL_CustCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_CustCodeNull() {
                this[this.tableCompanyWise_ShareReconcilation.CDBL_CustCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_ISINNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.CDBL_ISINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_ISINNull() {
                this[this.tableCompanyWise_ShareReconcilation.CDBL_ISINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_CompanyNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.CDBL_CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_CompanyNull() {
                this[this.tableCompanyWise_ShareReconcilation.CDBL_CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_ShareNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.CDBL_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_ShareNull() {
                this[this.tableCompanyWise_ShareReconcilation.CDBL_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_UnlockBalanceNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.CDBL_UnlockBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_UnlockBalanceNull() {
                this[this.tableCompanyWise_ShareReconcilation.CDBL_UnlockBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_CustCodeNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.BackOffice_CustCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_CustCodeNull() {
                this[this.tableCompanyWise_ShareReconcilation.BackOffice_CustCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ISIN_NoNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.BackOffice_ISIN_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ISIN_NoNull() {
                this[this.tableCompanyWise_ShareReconcilation.BackOffice_ISIN_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ShortCodeNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.BackOffice_ShortCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ShortCodeNull() {
                this[this.tableCompanyWise_ShareReconcilation.BackOffice_ShortCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ShareNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.BackOffice_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ShareNull() {
                this[this.tableCompanyWise_ShareReconcilation.BackOffice_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_MShareNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.BackOffice_MShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_MShareNull() {
                this[this.tableCompanyWise_ShareReconcilation.BackOffice_MShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableCompanyWise_ShareReconcilation.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrder_IdNull() {
                return this.IsNull(this.tableCompanyWise_ShareReconcilation.Order_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrder_IdNull() {
                this[this.tableCompanyWise_ShareReconcilation.Order_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerWise_ShareReconcilationRow : global::System.Data.DataRow {
            
            private CustomerWise_ShareReconcilationDataTable tableCustomerWise_ShareReconcilation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerWise_ShareReconcilationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerWise_ShareReconcilation = ((CustomerWise_ShareReconcilationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string All_Cust_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.All_Cust_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'All_Cust_Code\' in table \'CustomerWise_ShareReconcilation\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.All_Cust_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string All_Cust_Name {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.All_Cust_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'All_Cust_Name\' in table \'CustomerWise_ShareReconcilation\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.All_Cust_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_CustCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.CDBL_CustCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_CustCode\' in table \'CustomerWise_ShareReconcilation\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.CDBL_CustCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_ISIN {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.CDBL_ISINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_ISIN\' in table \'CustomerWise_ShareReconcilation\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.CDBL_ISINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDBL_Company {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.CDBL_CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_Company\' in table \'CustomerWise_ShareReconcilation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.CDBL_CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CDBL_Share {
                get {
                    try {
                        return ((double)(this[this.tableCustomerWise_ShareReconcilation.CDBL_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_Share\' in table \'CustomerWise_ShareReconcilation\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.CDBL_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CDBL_UnlockBalance {
                get {
                    try {
                        return ((double)(this[this.tableCustomerWise_ShareReconcilation.CDBL_UnlockBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDBL_UnlockBalance\' in table \'CustomerWise_ShareReconcilati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.CDBL_UnlockBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_CustCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.BackOffice_CustCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_CustCode\' in table \'CustomerWise_ShareReconcilat" +
                                "ion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.BackOffice_CustCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_ISIN_No {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.BackOffice_ISIN_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_ISIN_No\' in table \'CustomerWise_ShareReconcilati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.BackOffice_ISIN_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BackOffice_ShortCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.BackOffice_ShortCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_ShortCode\' in table \'CustomerWise_ShareReconcila" +
                                "tion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.BackOffice_ShortCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BackOffice_Share {
                get {
                    try {
                        return ((double)(this[this.tableCustomerWise_ShareReconcilation.BackOffice_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_Share\' in table \'CustomerWise_ShareReconcilation" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.BackOffice_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BackOffice_MShare {
                get {
                    try {
                        return ((double)(this[this.tableCustomerWise_ShareReconcilation.BackOffice_MShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackOffice_MShare\' in table \'CustomerWise_ShareReconcilatio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.BackOffice_MShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableCustomerWise_ShareReconcilation.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'CustomerWise_ShareReconcilation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Order_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerWise_ShareReconcilation.Order_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order_Id\' in table \'CustomerWise_ShareReconcilation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerWise_ShareReconcilation.Order_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAll_Cust_CodeNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.All_Cust_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAll_Cust_CodeNull() {
                this[this.tableCustomerWise_ShareReconcilation.All_Cust_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAll_Cust_NameNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.All_Cust_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAll_Cust_NameNull() {
                this[this.tableCustomerWise_ShareReconcilation.All_Cust_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_CustCodeNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.CDBL_CustCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_CustCodeNull() {
                this[this.tableCustomerWise_ShareReconcilation.CDBL_CustCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_ISINNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.CDBL_ISINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_ISINNull() {
                this[this.tableCustomerWise_ShareReconcilation.CDBL_ISINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_CompanyNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.CDBL_CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_CompanyNull() {
                this[this.tableCustomerWise_ShareReconcilation.CDBL_CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_ShareNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.CDBL_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_ShareNull() {
                this[this.tableCustomerWise_ShareReconcilation.CDBL_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCDBL_UnlockBalanceNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.CDBL_UnlockBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCDBL_UnlockBalanceNull() {
                this[this.tableCustomerWise_ShareReconcilation.CDBL_UnlockBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_CustCodeNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.BackOffice_CustCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_CustCodeNull() {
                this[this.tableCustomerWise_ShareReconcilation.BackOffice_CustCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ISIN_NoNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.BackOffice_ISIN_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ISIN_NoNull() {
                this[this.tableCustomerWise_ShareReconcilation.BackOffice_ISIN_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ShortCodeNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.BackOffice_ShortCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ShortCodeNull() {
                this[this.tableCustomerWise_ShareReconcilation.BackOffice_ShortCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_ShareNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.BackOffice_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_ShareNull() {
                this[this.tableCustomerWise_ShareReconcilation.BackOffice_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBackOffice_MShareNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.BackOffice_MShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBackOffice_MShareNull() {
                this[this.tableCustomerWise_ShareReconcilation.BackOffice_MShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableCustomerWise_ShareReconcilation.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrder_IdNull() {
                return this.IsNull(this.tableCustomerWise_ShareReconcilation.Order_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrder_IdNull() {
                this[this.tableCustomerWise_ShareReconcilation.Order_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyWise_ShareReconcilationRowChangeEvent : global::System.EventArgs {
            
            private CompanyWise_ShareReconcilationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyWise_ShareReconcilationRowChangeEvent(CompanyWise_ShareReconcilationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyWise_ShareReconcilationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerWise_ShareReconcilationRowChangeEvent : global::System.EventArgs {
            
            private CustomerWise_ShareReconcilationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerWise_ShareReconcilationRowChangeEvent(CustomerWise_ShareReconcilationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerWise_ShareReconcilationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591