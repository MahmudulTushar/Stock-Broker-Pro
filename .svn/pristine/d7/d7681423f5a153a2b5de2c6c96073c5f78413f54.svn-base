//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SBP_Payroll_Pro {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_EmployeeWiseSalaryHistory")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_EmployeeWiseSalaryHistory : global::System.Data.DataSet {
        
        private SBP_Employee_Salary_InfoDataTable tableSBP_Employee_Salary_Info;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_EmployeeWiseSalaryHistory() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_EmployeeWiseSalaryHistory(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SBP_Employee_Salary_Info"] != null)) {
                    base.Tables.Add(new SBP_Employee_Salary_InfoDataTable(ds.Tables["SBP_Employee_Salary_Info"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SBP_Employee_Salary_InfoDataTable SBP_Employee_Salary_Info {
            get {
                return this.tableSBP_Employee_Salary_Info;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_EmployeeWiseSalaryHistory cln = ((ds_EmployeeWiseSalaryHistory)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SBP_Employee_Salary_Info"] != null)) {
                    base.Tables.Add(new SBP_Employee_Salary_InfoDataTable(ds.Tables["SBP_Employee_Salary_Info"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSBP_Employee_Salary_Info = ((SBP_Employee_Salary_InfoDataTable)(base.Tables["SBP_Employee_Salary_Info"]));
            if ((initTable == true)) {
                if ((this.tableSBP_Employee_Salary_Info != null)) {
                    this.tableSBP_Employee_Salary_Info.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_EmployeeWiseSalaryHistory";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_EmployeeWiseSalaryHistory.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSBP_Employee_Salary_Info = new SBP_Employee_Salary_InfoDataTable();
            base.Tables.Add(this.tableSBP_Employee_Salary_Info);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSBP_Employee_Salary_Info() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_EmployeeWiseSalaryHistory ds = new ds_EmployeeWiseSalaryHistory();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SBP_Employee_Salary_InfoRowChangeEventHandler(object sender, SBP_Employee_Salary_InfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SBP_Employee_Salary_InfoDataTable : global::System.Data.TypedTableBase<SBP_Employee_Salary_InfoRow> {
            
            private global::System.Data.DataColumn columnPayrollDate;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnTotal_Facilities;
            
            private global::System.Data.DataColumn columnOthers;
            
            private global::System.Data.DataColumn columnBouns;
            
            private global::System.Data.DataColumn columnOverTime;
            
            private global::System.Data.DataColumn columnProvidentFund;
            
            private global::System.Data.DataColumn columnDeductionAmount;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Employee_Salary_InfoDataTable() {
                this.TableName = "SBP_Employee_Salary_Info";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SBP_Employee_Salary_InfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SBP_Employee_Salary_InfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayrollDateColumn {
                get {
                    return this.columnPayrollDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_FacilitiesColumn {
                get {
                    return this.columnTotal_Facilities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OthersColumn {
                get {
                    return this.columnOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BounsColumn {
                get {
                    return this.columnBouns;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverTimeColumn {
                get {
                    return this.columnOverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProvidentFundColumn {
                get {
                    return this.columnProvidentFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeductionAmountColumn {
                get {
                    return this.columnDeductionAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Employee_Salary_InfoRow this[int index] {
                get {
                    return ((SBP_Employee_Salary_InfoRow)(this.Rows[index]));
                }
            }
            
            public event SBP_Employee_Salary_InfoRowChangeEventHandler SBP_Employee_Salary_InfoRowChanging;
            
            public event SBP_Employee_Salary_InfoRowChangeEventHandler SBP_Employee_Salary_InfoRowChanged;
            
            public event SBP_Employee_Salary_InfoRowChangeEventHandler SBP_Employee_Salary_InfoRowDeleting;
            
            public event SBP_Employee_Salary_InfoRowChangeEventHandler SBP_Employee_Salary_InfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSBP_Employee_Salary_InfoRow(SBP_Employee_Salary_InfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Employee_Salary_InfoRow AddSBP_Employee_Salary_InfoRow(System.DateTime PayrollDate, double BasicSalary, double Total_Facilities, double Others, double Bouns, double OverTime, double ProvidentFund, double DeductionAmount, double Total) {
                SBP_Employee_Salary_InfoRow rowSBP_Employee_Salary_InfoRow = ((SBP_Employee_Salary_InfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PayrollDate,
                        BasicSalary,
                        Total_Facilities,
                        Others,
                        Bouns,
                        OverTime,
                        ProvidentFund,
                        DeductionAmount,
                        Total};
                rowSBP_Employee_Salary_InfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSBP_Employee_Salary_InfoRow);
                return rowSBP_Employee_Salary_InfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SBP_Employee_Salary_InfoDataTable cln = ((SBP_Employee_Salary_InfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SBP_Employee_Salary_InfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPayrollDate = base.Columns["PayrollDate"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnTotal_Facilities = base.Columns["Total Facilities"];
                this.columnOthers = base.Columns["Others"];
                this.columnBouns = base.Columns["Bouns"];
                this.columnOverTime = base.Columns["OverTime"];
                this.columnProvidentFund = base.Columns["ProvidentFund"];
                this.columnDeductionAmount = base.Columns["DeductionAmount"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPayrollDate = new global::System.Data.DataColumn("PayrollDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayrollDate);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnTotal_Facilities = new global::System.Data.DataColumn("Total Facilities", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Facilities);
                this.columnOthers = new global::System.Data.DataColumn("Others", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthers);
                this.columnBouns = new global::System.Data.DataColumn("Bouns", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBouns);
                this.columnOverTime = new global::System.Data.DataColumn("OverTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTime);
                this.columnProvidentFund = new global::System.Data.DataColumn("ProvidentFund", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvidentFund);
                this.columnDeductionAmount = new global::System.Data.DataColumn("DeductionAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Employee_Salary_InfoRow NewSBP_Employee_Salary_InfoRow() {
                return ((SBP_Employee_Salary_InfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SBP_Employee_Salary_InfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SBP_Employee_Salary_InfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SBP_Employee_Salary_InfoRowChanged != null)) {
                    this.SBP_Employee_Salary_InfoRowChanged(this, new SBP_Employee_Salary_InfoRowChangeEvent(((SBP_Employee_Salary_InfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SBP_Employee_Salary_InfoRowChanging != null)) {
                    this.SBP_Employee_Salary_InfoRowChanging(this, new SBP_Employee_Salary_InfoRowChangeEvent(((SBP_Employee_Salary_InfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SBP_Employee_Salary_InfoRowDeleted != null)) {
                    this.SBP_Employee_Salary_InfoRowDeleted(this, new SBP_Employee_Salary_InfoRowChangeEvent(((SBP_Employee_Salary_InfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SBP_Employee_Salary_InfoRowDeleting != null)) {
                    this.SBP_Employee_Salary_InfoRowDeleting(this, new SBP_Employee_Salary_InfoRowChangeEvent(((SBP_Employee_Salary_InfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSBP_Employee_Salary_InfoRow(SBP_Employee_Salary_InfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_EmployeeWiseSalaryHistory ds = new ds_EmployeeWiseSalaryHistory();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SBP_Employee_Salary_InfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SBP_Employee_Salary_InfoRow : global::System.Data.DataRow {
            
            private SBP_Employee_Salary_InfoDataTable tableSBP_Employee_Salary_Info;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SBP_Employee_Salary_InfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSBP_Employee_Salary_Info = ((SBP_Employee_Salary_InfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PayrollDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSBP_Employee_Salary_Info.PayrollDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayrollDate\' in table \'SBP_Employee_Salary_Info\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.PayrollDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BasicSalary {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.BasicSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasicSalary\' in table \'SBP_Employee_Salary_Info\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Total_Facilities {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.Total_FacilitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total Facilities\' in table \'SBP_Employee_Salary_Info\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.Total_FacilitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Others {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Others\' in table \'SBP_Employee_Salary_Info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Bouns {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.BounsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bouns\' in table \'SBP_Employee_Salary_Info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.BounsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OverTime {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.OverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverTime\' in table \'SBP_Employee_Salary_Info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.OverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ProvidentFund {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.ProvidentFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvidentFund\' in table \'SBP_Employee_Salary_Info\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.ProvidentFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DeductionAmount {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.DeductionAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductionAmount\' in table \'SBP_Employee_Salary_Info\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.DeductionAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Total {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Employee_Salary_Info.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'SBP_Employee_Salary_Info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Employee_Salary_Info.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayrollDateNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.PayrollDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayrollDateNull() {
                this[this.tableSBP_Employee_Salary_Info.PayrollDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasicSalaryNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.BasicSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasicSalaryNull() {
                this[this.tableSBP_Employee_Salary_Info.BasicSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_FacilitiesNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.Total_FacilitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_FacilitiesNull() {
                this[this.tableSBP_Employee_Salary_Info.Total_FacilitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOthersNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOthersNull() {
                this[this.tableSBP_Employee_Salary_Info.OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBounsNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.BounsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBounsNull() {
                this[this.tableSBP_Employee_Salary_Info.BounsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverTimeNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.OverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverTimeNull() {
                this[this.tableSBP_Employee_Salary_Info.OverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProvidentFundNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.ProvidentFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProvidentFundNull() {
                this[this.tableSBP_Employee_Salary_Info.ProvidentFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductionAmountNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.DeductionAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductionAmountNull() {
                this[this.tableSBP_Employee_Salary_Info.DeductionAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableSBP_Employee_Salary_Info.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableSBP_Employee_Salary_Info.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SBP_Employee_Salary_InfoRowChangeEvent : global::System.EventArgs {
            
            private SBP_Employee_Salary_InfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Employee_Salary_InfoRowChangeEvent(SBP_Employee_Salary_InfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Employee_Salary_InfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591