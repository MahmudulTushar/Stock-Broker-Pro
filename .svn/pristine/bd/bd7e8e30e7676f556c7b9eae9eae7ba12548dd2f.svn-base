//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace StockbrokerProNewArch {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dspdfReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dspdfReport : global::System.Data.DataSet {
        
        private FormImageDataTable tableFormImage;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dspdfReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dspdfReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FormImage"] != null)) {
                    base.Tables.Add(new FormImageDataTable(ds.Tables["FormImage"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FormImageDataTable FormImage {
            get {
                return this.tableFormImage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dspdfReport cln = ((dspdfReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FormImage"] != null)) {
                    base.Tables.Add(new FormImageDataTable(ds.Tables["FormImage"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFormImage = ((FormImageDataTable)(base.Tables["FormImage"]));
            if ((initTable == true)) {
                if ((this.tableFormImage != null)) {
                    this.tableFormImage.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dspdfReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dspdfReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFormImage = new FormImageDataTable();
            base.Tables.Add(this.tableFormImage);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFormImage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dspdfReport ds = new dspdfReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FormImageRowChangeEventHandler(object sender, FormImageRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FormImageDataTable : global::System.Data.TypedTableBase<FormImageRow> {
            
            private global::System.Data.DataColumn columnCust_Photo;
            
            private global::System.Data.DataColumn columnCust_Signature;
            
            private global::System.Data.DataColumn columnNominee1_Photo;
            
            private global::System.Data.DataColumn columnNominee1_Signature;
            
            private global::System.Data.DataColumn columnJoint_Acc_Holdr_Photo;
            
            private global::System.Data.DataColumn columnJoint_Acc_Holdr_Signature;
            
            private global::System.Data.DataColumn columnAuthorized_Person_Photo;
            
            private global::System.Data.DataColumn columnAuthorized_Person_Signature;
            
            private global::System.Data.DataColumn columnNominee2_Photo;
            
            private global::System.Data.DataColumn columnNominee2_Signature;
            
            private global::System.Data.DataColumn columnGurdian1_Photo;
            
            private global::System.Data.DataColumn columnGurdian1_Signature;
            
            private global::System.Data.DataColumn columnGurdian2_Photo;
            
            private global::System.Data.DataColumn columnGurdian2_Signature;
            
            private global::System.Data.DataColumn columnPOA_Photo;
            
            private global::System.Data.DataColumn columnPOA_Signature;
            
            private global::System.Data.DataColumn columnDefault_Signature;
            
            private global::System.Data.DataColumn columnDirector_Signature;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FormImageDataTable() {
                this.TableName = "FormImage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FormImageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FormImageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_PhotoColumn {
                get {
                    return this.columnCust_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_SignatureColumn {
                get {
                    return this.columnCust_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nominee1_PhotoColumn {
                get {
                    return this.columnNominee1_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nominee1_SignatureColumn {
                get {
                    return this.columnNominee1_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Joint_Acc_Holdr_PhotoColumn {
                get {
                    return this.columnJoint_Acc_Holdr_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Joint_Acc_Holdr_SignatureColumn {
                get {
                    return this.columnJoint_Acc_Holdr_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Authorized_Person_PhotoColumn {
                get {
                    return this.columnAuthorized_Person_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Authorized_Person_SignatureColumn {
                get {
                    return this.columnAuthorized_Person_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nominee2_PhotoColumn {
                get {
                    return this.columnNominee2_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nominee2_SignatureColumn {
                get {
                    return this.columnNominee2_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gurdian1_PhotoColumn {
                get {
                    return this.columnGurdian1_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gurdian1_SignatureColumn {
                get {
                    return this.columnGurdian1_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gurdian2_PhotoColumn {
                get {
                    return this.columnGurdian2_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gurdian2_SignatureColumn {
                get {
                    return this.columnGurdian2_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POA_PhotoColumn {
                get {
                    return this.columnPOA_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POA_SignatureColumn {
                get {
                    return this.columnPOA_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Default_SignatureColumn {
                get {
                    return this.columnDefault_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Director_SignatureColumn {
                get {
                    return this.columnDirector_Signature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FormImageRow this[int index] {
                get {
                    return ((FormImageRow)(this.Rows[index]));
                }
            }
            
            public event FormImageRowChangeEventHandler FormImageRowChanging;
            
            public event FormImageRowChangeEventHandler FormImageRowChanged;
            
            public event FormImageRowChangeEventHandler FormImageRowDeleting;
            
            public event FormImageRowChangeEventHandler FormImageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFormImageRow(FormImageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FormImageRow AddFormImageRow(
                        byte[] Cust_Photo, 
                        byte[] Cust_Signature, 
                        byte[] Nominee1_Photo, 
                        byte[] Nominee1_Signature, 
                        byte[] Joint_Acc_Holdr_Photo, 
                        byte[] Joint_Acc_Holdr_Signature, 
                        byte[] Authorized_Person_Photo, 
                        byte[] Authorized_Person_Signature, 
                        byte[] Nominee2_Photo, 
                        byte[] Nominee2_Signature, 
                        byte[] Gurdian1_Photo, 
                        byte[] Gurdian1_Signature, 
                        byte[] Gurdian2_Photo, 
                        byte[] Gurdian2_Signature, 
                        byte[] POA_Photo, 
                        byte[] POA_Signature, 
                        byte[] Default_Signature, 
                        byte[] Director_Signature) {
                FormImageRow rowFormImageRow = ((FormImageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cust_Photo,
                        Cust_Signature,
                        Nominee1_Photo,
                        Nominee1_Signature,
                        Joint_Acc_Holdr_Photo,
                        Joint_Acc_Holdr_Signature,
                        Authorized_Person_Photo,
                        Authorized_Person_Signature,
                        Nominee2_Photo,
                        Nominee2_Signature,
                        Gurdian1_Photo,
                        Gurdian1_Signature,
                        Gurdian2_Photo,
                        Gurdian2_Signature,
                        POA_Photo,
                        POA_Signature,
                        Default_Signature,
                        Director_Signature};
                rowFormImageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFormImageRow);
                return rowFormImageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FormImageDataTable cln = ((FormImageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FormImageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCust_Photo = base.Columns["Cust_Photo"];
                this.columnCust_Signature = base.Columns["Cust_Signature"];
                this.columnNominee1_Photo = base.Columns["Nominee1_Photo"];
                this.columnNominee1_Signature = base.Columns["Nominee1_Signature"];
                this.columnJoint_Acc_Holdr_Photo = base.Columns["Joint_Acc_Holdr_Photo"];
                this.columnJoint_Acc_Holdr_Signature = base.Columns["Joint_Acc_Holdr_Signature"];
                this.columnAuthorized_Person_Photo = base.Columns["Authorized_Person_Photo"];
                this.columnAuthorized_Person_Signature = base.Columns["Authorized_Person_Signature"];
                this.columnNominee2_Photo = base.Columns["Nominee2_Photo"];
                this.columnNominee2_Signature = base.Columns["Nominee2_Signature"];
                this.columnGurdian1_Photo = base.Columns["Gurdian1_Photo"];
                this.columnGurdian1_Signature = base.Columns["Gurdian1_Signature"];
                this.columnGurdian2_Photo = base.Columns["Gurdian2_Photo"];
                this.columnGurdian2_Signature = base.Columns["Gurdian2_Signature"];
                this.columnPOA_Photo = base.Columns["POA_Photo"];
                this.columnPOA_Signature = base.Columns["POA_Signature"];
                this.columnDefault_Signature = base.Columns["Default_Signature"];
                this.columnDirector_Signature = base.Columns["Director_Signature"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCust_Photo = new global::System.Data.DataColumn("Cust_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Photo);
                this.columnCust_Signature = new global::System.Data.DataColumn("Cust_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Signature);
                this.columnNominee1_Photo = new global::System.Data.DataColumn("Nominee1_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominee1_Photo);
                this.columnNominee1_Signature = new global::System.Data.DataColumn("Nominee1_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominee1_Signature);
                this.columnJoint_Acc_Holdr_Photo = new global::System.Data.DataColumn("Joint_Acc_Holdr_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoint_Acc_Holdr_Photo);
                this.columnJoint_Acc_Holdr_Signature = new global::System.Data.DataColumn("Joint_Acc_Holdr_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoint_Acc_Holdr_Signature);
                this.columnAuthorized_Person_Photo = new global::System.Data.DataColumn("Authorized_Person_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorized_Person_Photo);
                this.columnAuthorized_Person_Signature = new global::System.Data.DataColumn("Authorized_Person_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorized_Person_Signature);
                this.columnNominee2_Photo = new global::System.Data.DataColumn("Nominee2_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominee2_Photo);
                this.columnNominee2_Signature = new global::System.Data.DataColumn("Nominee2_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominee2_Signature);
                this.columnGurdian1_Photo = new global::System.Data.DataColumn("Gurdian1_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGurdian1_Photo);
                this.columnGurdian1_Signature = new global::System.Data.DataColumn("Gurdian1_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGurdian1_Signature);
                this.columnGurdian2_Photo = new global::System.Data.DataColumn("Gurdian2_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGurdian2_Photo);
                this.columnGurdian2_Signature = new global::System.Data.DataColumn("Gurdian2_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGurdian2_Signature);
                this.columnPOA_Photo = new global::System.Data.DataColumn("POA_Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOA_Photo);
                this.columnPOA_Signature = new global::System.Data.DataColumn("POA_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOA_Signature);
                this.columnDefault_Signature = new global::System.Data.DataColumn("Default_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefault_Signature);
                this.columnDirector_Signature = new global::System.Data.DataColumn("Director_Signature", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirector_Signature);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FormImageRow NewFormImageRow() {
                return ((FormImageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FormImageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FormImageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FormImageRowChanged != null)) {
                    this.FormImageRowChanged(this, new FormImageRowChangeEvent(((FormImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FormImageRowChanging != null)) {
                    this.FormImageRowChanging(this, new FormImageRowChangeEvent(((FormImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FormImageRowDeleted != null)) {
                    this.FormImageRowDeleted(this, new FormImageRowChangeEvent(((FormImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FormImageRowDeleting != null)) {
                    this.FormImageRowDeleting(this, new FormImageRowChangeEvent(((FormImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFormImageRow(FormImageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dspdfReport ds = new dspdfReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FormImageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FormImageRow : global::System.Data.DataRow {
            
            private FormImageDataTable tableFormImage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FormImageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFormImage = ((FormImageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Cust_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Cust_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Cust_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Cust_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Cust_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cust_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Cust_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Nominee1_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Nominee1_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominee1_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Nominee1_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Nominee1_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Nominee1_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominee1_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Nominee1_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Joint_Acc_Holdr_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Joint_Acc_Holdr_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Joint_Acc_Holdr_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Joint_Acc_Holdr_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Joint_Acc_Holdr_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Joint_Acc_Holdr_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Joint_Acc_Holdr_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Joint_Acc_Holdr_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Authorized_Person_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Authorized_Person_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Authorized_Person_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Authorized_Person_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Authorized_Person_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Authorized_Person_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Authorized_Person_Signature\' in table \'FormImage\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFormImage.Authorized_Person_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Nominee2_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Nominee2_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominee2_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Nominee2_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Nominee2_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Nominee2_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominee2_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Nominee2_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Gurdian1_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Gurdian1_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gurdian1_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Gurdian1_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Gurdian1_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Gurdian1_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gurdian1_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Gurdian1_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Gurdian2_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Gurdian2_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gurdian2_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Gurdian2_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Gurdian2_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Gurdian2_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gurdian2_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Gurdian2_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] POA_Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.POA_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POA_Photo\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.POA_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] POA_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.POA_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POA_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.POA_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Default_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Default_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Default_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Default_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Director_Signature {
                get {
                    try {
                        return ((byte[])(this[this.tableFormImage.Director_SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Director_Signature\' in table \'FormImage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFormImage.Director_SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_PhotoNull() {
                return this.IsNull(this.tableFormImage.Cust_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_PhotoNull() {
                this[this.tableFormImage.Cust_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_SignatureNull() {
                return this.IsNull(this.tableFormImage.Cust_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_SignatureNull() {
                this[this.tableFormImage.Cust_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominee1_PhotoNull() {
                return this.IsNull(this.tableFormImage.Nominee1_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominee1_PhotoNull() {
                this[this.tableFormImage.Nominee1_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominee1_SignatureNull() {
                return this.IsNull(this.tableFormImage.Nominee1_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominee1_SignatureNull() {
                this[this.tableFormImage.Nominee1_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoint_Acc_Holdr_PhotoNull() {
                return this.IsNull(this.tableFormImage.Joint_Acc_Holdr_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoint_Acc_Holdr_PhotoNull() {
                this[this.tableFormImage.Joint_Acc_Holdr_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoint_Acc_Holdr_SignatureNull() {
                return this.IsNull(this.tableFormImage.Joint_Acc_Holdr_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoint_Acc_Holdr_SignatureNull() {
                this[this.tableFormImage.Joint_Acc_Holdr_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorized_Person_PhotoNull() {
                return this.IsNull(this.tableFormImage.Authorized_Person_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorized_Person_PhotoNull() {
                this[this.tableFormImage.Authorized_Person_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorized_Person_SignatureNull() {
                return this.IsNull(this.tableFormImage.Authorized_Person_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorized_Person_SignatureNull() {
                this[this.tableFormImage.Authorized_Person_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominee2_PhotoNull() {
                return this.IsNull(this.tableFormImage.Nominee2_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominee2_PhotoNull() {
                this[this.tableFormImage.Nominee2_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominee2_SignatureNull() {
                return this.IsNull(this.tableFormImage.Nominee2_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominee2_SignatureNull() {
                this[this.tableFormImage.Nominee2_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGurdian1_PhotoNull() {
                return this.IsNull(this.tableFormImage.Gurdian1_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGurdian1_PhotoNull() {
                this[this.tableFormImage.Gurdian1_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGurdian1_SignatureNull() {
                return this.IsNull(this.tableFormImage.Gurdian1_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGurdian1_SignatureNull() {
                this[this.tableFormImage.Gurdian1_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGurdian2_PhotoNull() {
                return this.IsNull(this.tableFormImage.Gurdian2_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGurdian2_PhotoNull() {
                this[this.tableFormImage.Gurdian2_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGurdian2_SignatureNull() {
                return this.IsNull(this.tableFormImage.Gurdian2_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGurdian2_SignatureNull() {
                this[this.tableFormImage.Gurdian2_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOA_PhotoNull() {
                return this.IsNull(this.tableFormImage.POA_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOA_PhotoNull() {
                this[this.tableFormImage.POA_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOA_SignatureNull() {
                return this.IsNull(this.tableFormImage.POA_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOA_SignatureNull() {
                this[this.tableFormImage.POA_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefault_SignatureNull() {
                return this.IsNull(this.tableFormImage.Default_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefault_SignatureNull() {
                this[this.tableFormImage.Default_SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirector_SignatureNull() {
                return this.IsNull(this.tableFormImage.Director_SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirector_SignatureNull() {
                this[this.tableFormImage.Director_SignatureColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FormImageRowChangeEvent : global::System.EventArgs {
            
            private FormImageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FormImageRowChangeEvent(FormImageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FormImageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591