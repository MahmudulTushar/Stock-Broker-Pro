//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsIPOForwardingResultAfterResult")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsIPOForwardingResultAfterResult : global::System.Data.DataSet {
        
        private IPOForwardingLetterAfterResultDataTable tableIPOForwardingLetterAfterResult;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsIPOForwardingResultAfterResult() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsIPOForwardingResultAfterResult(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["IPOForwardingLetterAfterResult"] != null)) {
                    base.Tables.Add(new IPOForwardingLetterAfterResultDataTable(ds.Tables["IPOForwardingLetterAfterResult"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IPOForwardingLetterAfterResultDataTable IPOForwardingLetterAfterResult {
            get {
                return this.tableIPOForwardingLetterAfterResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsIPOForwardingResultAfterResult cln = ((dsIPOForwardingResultAfterResult)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["IPOForwardingLetterAfterResult"] != null)) {
                    base.Tables.Add(new IPOForwardingLetterAfterResultDataTable(ds.Tables["IPOForwardingLetterAfterResult"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableIPOForwardingLetterAfterResult = ((IPOForwardingLetterAfterResultDataTable)(base.Tables["IPOForwardingLetterAfterResult"]));
            if ((initTable == true)) {
                if ((this.tableIPOForwardingLetterAfterResult != null)) {
                    this.tableIPOForwardingLetterAfterResult.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsIPOForwardingResultAfterResult";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsIPOForwardingResultAfterResult.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIPOForwardingLetterAfterResult = new IPOForwardingLetterAfterResultDataTable();
            base.Tables.Add(this.tableIPOForwardingLetterAfterResult);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIPOForwardingLetterAfterResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsIPOForwardingResultAfterResult ds = new dsIPOForwardingResultAfterResult();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void IPOForwardingLetterAfterResultRowChangeEventHandler(object sender, IPOForwardingLetterAfterResultRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IPOForwardingLetterAfterResultDataTable : global::System.Data.TypedTableBase<IPOForwardingLetterAfterResultRow> {
            
            private global::System.Data.DataColumn columnToday_Date;
            
            private global::System.Data.DataColumn columnDirector_Name;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnCompany_Name;
            
            private global::System.Data.DataColumn columnCompany_Addr;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnDear_Sir;
            
            private global::System.Data.DataColumn columnBody;
            
            private global::System.Data.DataColumn columnTotal_Share_qty;
            
            private global::System.Data.DataColumn columnSuccessful_Share;
            
            private global::System.Data.DataColumn columnThanks;
            
            private global::System.Data.DataColumn columnCalculation_Of_Successful;
            
            private global::System.Data.DataColumn columnPay_To;
            
            private global::System.Data.DataColumn columnEach_Share;
            
            private global::System.Data.DataColumn columnSuccessful_Amount_Tk;
            
            private global::System.Data.DataColumn columnForfit_Amount;
            
            private global::System.Data.DataColumn columnPaid_to;
            
            private global::System.Data.DataColumn columnEnd1;
            
            private global::System.Data.DataColumn columnPaid_By;
            
            private global::System.Data.DataColumn columnTotal_Subscription_Amount;
            
            private global::System.Data.DataColumn columnEnd2;
            
            private global::System.Data.DataColumn columnAddr;
            
            private global::System.Data.DataColumn columnTotalPaid_ToIssuer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IPOForwardingLetterAfterResultDataTable() {
                this.TableName = "IPOForwardingLetterAfterResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IPOForwardingLetterAfterResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IPOForwardingLetterAfterResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Today_DateColumn {
                get {
                    return this.columnToday_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Director_NameColumn {
                get {
                    return this.columnDirector_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_NameColumn {
                get {
                    return this.columnCompany_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_AddrColumn {
                get {
                    return this.columnCompany_Addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dear_SirColumn {
                get {
                    return this.columnDear_Sir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BodyColumn {
                get {
                    return this.columnBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_Share_qtyColumn {
                get {
                    return this.columnTotal_Share_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Successful_ShareColumn {
                get {
                    return this.columnSuccessful_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThanksColumn {
                get {
                    return this.columnThanks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Calculation_Of_SuccessfulColumn {
                get {
                    return this.columnCalculation_Of_Successful;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pay_ToColumn {
                get {
                    return this.columnPay_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Each_ShareColumn {
                get {
                    return this.columnEach_Share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Successful_Amount_TkColumn {
                get {
                    return this.columnSuccessful_Amount_Tk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Forfit_AmountColumn {
                get {
                    return this.columnForfit_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Paid_toColumn {
                get {
                    return this.columnPaid_to;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn End1Column {
                get {
                    return this.columnEnd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Paid_ByColumn {
                get {
                    return this.columnPaid_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_Subscription_AmountColumn {
                get {
                    return this.columnTotal_Subscription_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn End2Column {
                get {
                    return this.columnEnd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddrColumn {
                get {
                    return this.columnAddr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaid_ToIssuerColumn {
                get {
                    return this.columnTotalPaid_ToIssuer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IPOForwardingLetterAfterResultRow this[int index] {
                get {
                    return ((IPOForwardingLetterAfterResultRow)(this.Rows[index]));
                }
            }
            
            public event IPOForwardingLetterAfterResultRowChangeEventHandler IPOForwardingLetterAfterResultRowChanging;
            
            public event IPOForwardingLetterAfterResultRowChangeEventHandler IPOForwardingLetterAfterResultRowChanged;
            
            public event IPOForwardingLetterAfterResultRowChangeEventHandler IPOForwardingLetterAfterResultRowDeleting;
            
            public event IPOForwardingLetterAfterResultRowChangeEventHandler IPOForwardingLetterAfterResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIPOForwardingLetterAfterResultRow(IPOForwardingLetterAfterResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IPOForwardingLetterAfterResultRow AddIPOForwardingLetterAfterResultRow(
                        string Today_Date, 
                        string Director_Name, 
                        string Designation, 
                        string Company_Name, 
                        string Company_Addr, 
                        string Subject, 
                        string Dear_Sir, 
                        string Body, 
                        string Total_Share_qty, 
                        string Successful_Share, 
                        string Thanks, 
                        decimal Calculation_Of_Successful, 
                        string Pay_To, 
                        string Each_Share, 
                        decimal Successful_Amount_Tk, 
                        decimal Forfit_Amount, 
                        string Paid_to, 
                        string End1, 
                        string Paid_By, 
                        string Total_Subscription_Amount, 
                        string End2, 
                        string Addr, 
                        decimal TotalPaid_ToIssuer) {
                IPOForwardingLetterAfterResultRow rowIPOForwardingLetterAfterResultRow = ((IPOForwardingLetterAfterResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Today_Date,
                        Director_Name,
                        Designation,
                        Company_Name,
                        Company_Addr,
                        Subject,
                        Dear_Sir,
                        Body,
                        Total_Share_qty,
                        Successful_Share,
                        Thanks,
                        Calculation_Of_Successful,
                        Pay_To,
                        Each_Share,
                        Successful_Amount_Tk,
                        Forfit_Amount,
                        Paid_to,
                        End1,
                        Paid_By,
                        Total_Subscription_Amount,
                        End2,
                        Addr,
                        TotalPaid_ToIssuer};
                rowIPOForwardingLetterAfterResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIPOForwardingLetterAfterResultRow);
                return rowIPOForwardingLetterAfterResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IPOForwardingLetterAfterResultDataTable cln = ((IPOForwardingLetterAfterResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IPOForwardingLetterAfterResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnToday_Date = base.Columns["Today_Date"];
                this.columnDirector_Name = base.Columns["Director_Name"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnCompany_Name = base.Columns["Company_Name"];
                this.columnCompany_Addr = base.Columns["Company_Addr"];
                this.columnSubject = base.Columns["Subject"];
                this.columnDear_Sir = base.Columns["Dear_Sir"];
                this.columnBody = base.Columns["Body"];
                this.columnTotal_Share_qty = base.Columns["Total_Share_qty"];
                this.columnSuccessful_Share = base.Columns["Successful_Share"];
                this.columnThanks = base.Columns["Thanks"];
                this.columnCalculation_Of_Successful = base.Columns["Calculation_Of_Successful"];
                this.columnPay_To = base.Columns["Pay_To"];
                this.columnEach_Share = base.Columns["Each_Share"];
                this.columnSuccessful_Amount_Tk = base.Columns["Successful_Amount_Tk"];
                this.columnForfit_Amount = base.Columns["Forfit_Amount"];
                this.columnPaid_to = base.Columns["Paid_to"];
                this.columnEnd1 = base.Columns["End1"];
                this.columnPaid_By = base.Columns["Paid_By"];
                this.columnTotal_Subscription_Amount = base.Columns["Total_Subscription_Amount"];
                this.columnEnd2 = base.Columns["End2"];
                this.columnAddr = base.Columns["Addr"];
                this.columnTotalPaid_ToIssuer = base.Columns["TotalPaid_ToIssuer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnToday_Date = new global::System.Data.DataColumn("Today_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToday_Date);
                this.columnDirector_Name = new global::System.Data.DataColumn("Director_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirector_Name);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnCompany_Name = new global::System.Data.DataColumn("Company_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Name);
                this.columnCompany_Addr = new global::System.Data.DataColumn("Company_Addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Addr);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnDear_Sir = new global::System.Data.DataColumn("Dear_Sir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDear_Sir);
                this.columnBody = new global::System.Data.DataColumn("Body", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBody);
                this.columnTotal_Share_qty = new global::System.Data.DataColumn("Total_Share_qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Share_qty);
                this.columnSuccessful_Share = new global::System.Data.DataColumn("Successful_Share", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuccessful_Share);
                this.columnThanks = new global::System.Data.DataColumn("Thanks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThanks);
                this.columnCalculation_Of_Successful = new global::System.Data.DataColumn("Calculation_Of_Successful", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalculation_Of_Successful);
                this.columnPay_To = new global::System.Data.DataColumn("Pay_To", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPay_To);
                this.columnEach_Share = new global::System.Data.DataColumn("Each_Share", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEach_Share);
                this.columnSuccessful_Amount_Tk = new global::System.Data.DataColumn("Successful_Amount_Tk", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuccessful_Amount_Tk);
                this.columnForfit_Amount = new global::System.Data.DataColumn("Forfit_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForfit_Amount);
                this.columnPaid_to = new global::System.Data.DataColumn("Paid_to", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_to);
                this.columnEnd1 = new global::System.Data.DataColumn("End1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnd1);
                this.columnPaid_By = new global::System.Data.DataColumn("Paid_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid_By);
                this.columnTotal_Subscription_Amount = new global::System.Data.DataColumn("Total_Subscription_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Subscription_Amount);
                this.columnEnd2 = new global::System.Data.DataColumn("End2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnd2);
                this.columnAddr = new global::System.Data.DataColumn("Addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddr);
                this.columnTotalPaid_ToIssuer = new global::System.Data.DataColumn("TotalPaid_ToIssuer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPaid_ToIssuer);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IPOForwardingLetterAfterResultRow NewIPOForwardingLetterAfterResultRow() {
                return ((IPOForwardingLetterAfterResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IPOForwardingLetterAfterResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IPOForwardingLetterAfterResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IPOForwardingLetterAfterResultRowChanged != null)) {
                    this.IPOForwardingLetterAfterResultRowChanged(this, new IPOForwardingLetterAfterResultRowChangeEvent(((IPOForwardingLetterAfterResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IPOForwardingLetterAfterResultRowChanging != null)) {
                    this.IPOForwardingLetterAfterResultRowChanging(this, new IPOForwardingLetterAfterResultRowChangeEvent(((IPOForwardingLetterAfterResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IPOForwardingLetterAfterResultRowDeleted != null)) {
                    this.IPOForwardingLetterAfterResultRowDeleted(this, new IPOForwardingLetterAfterResultRowChangeEvent(((IPOForwardingLetterAfterResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IPOForwardingLetterAfterResultRowDeleting != null)) {
                    this.IPOForwardingLetterAfterResultRowDeleting(this, new IPOForwardingLetterAfterResultRowChangeEvent(((IPOForwardingLetterAfterResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIPOForwardingLetterAfterResultRow(IPOForwardingLetterAfterResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsIPOForwardingResultAfterResult ds = new dsIPOForwardingResultAfterResult();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IPOForwardingLetterAfterResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IPOForwardingLetterAfterResultRow : global::System.Data.DataRow {
            
            private IPOForwardingLetterAfterResultDataTable tableIPOForwardingLetterAfterResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IPOForwardingLetterAfterResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIPOForwardingLetterAfterResult = ((IPOForwardingLetterAfterResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Today_Date {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Today_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Today_Date\' in table \'IPOForwardingLetterAfterResult\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Today_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Director_Name {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Director_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Director_Name\' in table \'IPOForwardingLetterAfterResult\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Director_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'IPOForwardingLetterAfterResult\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Name {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Company_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_Name\' in table \'IPOForwardingLetterAfterResult\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Company_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Addr {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Company_AddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_Addr\' in table \'IPOForwardingLetterAfterResult\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Company_AddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'IPOForwardingLetterAfterResult\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dear_Sir {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Dear_SirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dear_Sir\' in table \'IPOForwardingLetterAfterResult\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Dear_SirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Body {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.BodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Body\' in table \'IPOForwardingLetterAfterResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.BodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total_Share_qty {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Total_Share_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Share_qty\' in table \'IPOForwardingLetterAfterResult\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Total_Share_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Successful_Share {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Successful_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Successful_Share\' in table \'IPOForwardingLetterAfterResult\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Successful_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thanks {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.ThanksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Thanks\' in table \'IPOForwardingLetterAfterResult\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.ThanksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Calculation_Of_Successful {
                get {
                    try {
                        return ((decimal)(this[this.tableIPOForwardingLetterAfterResult.Calculation_Of_SuccessfulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Calculation_Of_Successful\' in table \'IPOForwardingLetterAft" +
                                "erResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Calculation_Of_SuccessfulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pay_To {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Pay_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pay_To\' in table \'IPOForwardingLetterAfterResult\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Pay_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Each_Share {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Each_ShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Each_Share\' in table \'IPOForwardingLetterAfterResult\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Each_ShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Successful_Amount_Tk {
                get {
                    try {
                        return ((decimal)(this[this.tableIPOForwardingLetterAfterResult.Successful_Amount_TkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Successful_Amount_Tk\' in table \'IPOForwardingLetterAfterRes" +
                                "ult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Successful_Amount_TkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Forfit_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableIPOForwardingLetterAfterResult.Forfit_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Forfit_Amount\' in table \'IPOForwardingLetterAfterResult\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Forfit_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Paid_to {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Paid_toColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid_to\' in table \'IPOForwardingLetterAfterResult\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Paid_toColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string End1 {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.End1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'End1\' in table \'IPOForwardingLetterAfterResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.End1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Paid_By {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Paid_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid_By\' in table \'IPOForwardingLetterAfterResult\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Paid_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total_Subscription_Amount {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.Total_Subscription_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Subscription_Amount\' in table \'IPOForwardingLetterAft" +
                                "erResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.Total_Subscription_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string End2 {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.End2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'End2\' in table \'IPOForwardingLetterAfterResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.End2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addr {
                get {
                    try {
                        return ((string)(this[this.tableIPOForwardingLetterAfterResult.AddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addr\' in table \'IPOForwardingLetterAfterResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.AddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPaid_ToIssuer {
                get {
                    try {
                        return ((decimal)(this[this.tableIPOForwardingLetterAfterResult.TotalPaid_ToIssuerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPaid_ToIssuer\' in table \'IPOForwardingLetterAfterResul" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIPOForwardingLetterAfterResult.TotalPaid_ToIssuerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToday_DateNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Today_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToday_DateNull() {
                this[this.tableIPOForwardingLetterAfterResult.Today_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirector_NameNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Director_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirector_NameNull() {
                this[this.tableIPOForwardingLetterAfterResult.Director_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableIPOForwardingLetterAfterResult.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_NameNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Company_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_NameNull() {
                this[this.tableIPOForwardingLetterAfterResult.Company_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_AddrNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Company_AddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_AddrNull() {
                this[this.tableIPOForwardingLetterAfterResult.Company_AddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNull() {
                this[this.tableIPOForwardingLetterAfterResult.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDear_SirNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Dear_SirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDear_SirNull() {
                this[this.tableIPOForwardingLetterAfterResult.Dear_SirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBodyNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.BodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBodyNull() {
                this[this.tableIPOForwardingLetterAfterResult.BodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_Share_qtyNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Total_Share_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_Share_qtyNull() {
                this[this.tableIPOForwardingLetterAfterResult.Total_Share_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuccessful_ShareNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Successful_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuccessful_ShareNull() {
                this[this.tableIPOForwardingLetterAfterResult.Successful_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThanksNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.ThanksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThanksNull() {
                this[this.tableIPOForwardingLetterAfterResult.ThanksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalculation_Of_SuccessfulNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Calculation_Of_SuccessfulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalculation_Of_SuccessfulNull() {
                this[this.tableIPOForwardingLetterAfterResult.Calculation_Of_SuccessfulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPay_ToNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Pay_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPay_ToNull() {
                this[this.tableIPOForwardingLetterAfterResult.Pay_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEach_ShareNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Each_ShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEach_ShareNull() {
                this[this.tableIPOForwardingLetterAfterResult.Each_ShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuccessful_Amount_TkNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Successful_Amount_TkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuccessful_Amount_TkNull() {
                this[this.tableIPOForwardingLetterAfterResult.Successful_Amount_TkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForfit_AmountNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Forfit_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForfit_AmountNull() {
                this[this.tableIPOForwardingLetterAfterResult.Forfit_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_toNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Paid_toColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_toNull() {
                this[this.tableIPOForwardingLetterAfterResult.Paid_toColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnd1Null() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.End1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnd1Null() {
                this[this.tableIPOForwardingLetterAfterResult.End1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaid_ByNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Paid_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaid_ByNull() {
                this[this.tableIPOForwardingLetterAfterResult.Paid_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_Subscription_AmountNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.Total_Subscription_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_Subscription_AmountNull() {
                this[this.tableIPOForwardingLetterAfterResult.Total_Subscription_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnd2Null() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.End2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnd2Null() {
                this[this.tableIPOForwardingLetterAfterResult.End2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.AddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrNull() {
                this[this.tableIPOForwardingLetterAfterResult.AddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPaid_ToIssuerNull() {
                return this.IsNull(this.tableIPOForwardingLetterAfterResult.TotalPaid_ToIssuerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPaid_ToIssuerNull() {
                this[this.tableIPOForwardingLetterAfterResult.TotalPaid_ToIssuerColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IPOForwardingLetterAfterResultRowChangeEvent : global::System.EventArgs {
            
            private IPOForwardingLetterAfterResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IPOForwardingLetterAfterResultRowChangeEvent(IPOForwardingLetterAfterResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IPOForwardingLetterAfterResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591