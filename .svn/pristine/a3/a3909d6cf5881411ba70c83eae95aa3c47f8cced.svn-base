using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using BusinessAccessLayer.BAL;
using CrystalDecisions.CrystalReports.Engine;

namespace Reports
{
    public partial class frmIPoTransferReport : Form
    {
        public frmIPoTransferReport()
        {
            InitializeComponent();
        }

        IPOReportBAL bal = new IPOReportBAL();
        private string _CommpanyName;
        private string _branchName;
        private string _branchAddress;
        private string _branchContactNumber;

        private void BtnTransfer_Click(object sender, EventArgs e)
        {
            DataTable dt = new DataTable();
            crIPoTransferReport objrpt = new crIPoTransferReport();
            frmIPOReportViewer viewer = new frmIPOReportViewer();
            dt = bal.GetIpoTransferReport(CmbTransaction.Text,dtpformdate.Value, dtpTodate.Value);
            //dt = bal.GetIpoTransferReport(dtpformdate.Value, dtpTodate.Value); 
            objrpt.SetDataSource(dt);

            GetCommonInfo();

            ((TextObject)objrpt.ReportDefinition.Sections[2].ReportObjects["txtTransferName"]).Text = CmbTransaction.Text;
            //Date
            ((TextObject)objrpt.ReportDefinition.Sections[2].ReportObjects["txtfromdate"]).Text = dtpformdate.Value.ToShortDateString();
            ((TextObject)objrpt.ReportDefinition.Sections[2].ReportObjects["txttodate"]).Text = dtpTodate.Value.ToShortDateString();

            ((TextObject)objrpt.ReportDefinition.Sections[2].ReportObjects["txtReportTitle"]).Text = "Daily Ipo Transfer Report";
            ((TextObject)objrpt.ReportDefinition.Sections[2].ReportObjects["txtCompanyName"]).Text =
                _CommpanyName;
            ///// Load Branch Name
            ((TextObject)objrpt.ReportDefinition.Sections[2].ReportObjects["txtAddress"]).Text =
                "Branch Name:" + _branchName + "," + _branchAddress + ". Phone:" + _branchContactNumber;

            viewer.crystalReportViewer1.ReportSource = objrpt;
            viewer.Show();

        }

        private void GetCommonInfo()
        {

            try
            {
                CommonInfoBal objCommonInfoBal = new CommonInfoBal();
                DataRow drCommonInfo = null;

                drCommonInfo = objCommonInfoBal.GetCommpanyInfo();

                if (drCommonInfo != null)
                {
                    _CommpanyName = drCommonInfo.Table.Rows[0][0].ToString();
                    _branchName = drCommonInfo.Table.Rows[0][1].ToString();
                    _branchAddress = drCommonInfo.Table.Rows[0][2].ToString();
                    _branchContactNumber = drCommonInfo.Table.Rows[0][3].ToString();
                }

            }
            catch (Exception)
            {

                throw;
            }
        }

        private void btnclose_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void frmIPoTransferReport_Load(object sender, EventArgs e)
        {
            CmbTransaction.SelectedIndex = 0;
        }
    }
}
