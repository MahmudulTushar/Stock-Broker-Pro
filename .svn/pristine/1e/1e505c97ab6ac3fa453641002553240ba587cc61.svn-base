<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAADrElEQVQ4T22SSVDbBRTGv3H0ojMenFEv
        vXrQQy8e9ORyc1SwndpOUbSFEpYQMJAGiCmyhiRkB0IgpAQIYSllMQshIRBCKFAKpEAI0AJJarUsU1IE
        dIqQ55/ioQffzDfv8n7fvA061zrMvkfQu8Mo71m+kKafMfNN9yfT6+7eYusmrtU5HsDsWUedfQXy7jkU
        Nt1Fbu0okuRevIgWbwQNw+E3kutnF1uGQyTuDpLQdH9T1DlPxsE1YmvHNrS2pTPN7lVU9QVQ2noPPN0o
        WGrfqYHWFUJm49yK2r5MVY5VzeOdw4sH/1Da452j8/KexRuidj9xdWNRVe/CKzrrEsrN0+DVepGq/K+D
        TOPc1VZPmKoH1uSHxyTe3o9FNnZju39EY5Gnf5FE0b3A0VoWiVXplNT3r5x2UDsClmLk1OCnpjlrcWfg
        aPPP43Pbe7EwA9Pv0RiFnx7R+tZxePOAvuRUeUJZavdvOmsQxc2TyK3x4IrYhdfffBsQtgdW+C3++f1D
        ymDgvZdgerh1vBeKUmay1HFboPdRzckOmidwXevBVZEVySInwGv2+wQt/p295/QVA4dfgim4cRyORCku
        pdIxk1Plfqa+PYdfGifAZ0ZIq3SAJbYCWYbporr+B9ToDiVt7ZOMgSMMvMvAkdVtkpuGQp9XmKfoHL/N
        JO+cxc8GH3jVHrCVLqRJ+wGVJfhaodl/WNg683e7NxL/ZJ/iQjvEDkcpvsP76JNsjfuJ0blMF/M7pXzt
        0FsC/Si4GjfYCifYcmaEm+41JKm8HxaZpknTF6BU1fBkimywIVniGBG13aPSpjtUbw9SjW2JshSu55eF
        XR/xaobBUQ4gUz4AKHsXYXCuorJr/p1vS2wmgWE8VtIySQX1o3RJ2GXhKAbOpFRYn1X2LFFJxwJx1S76
        htuUyFE6kS6xAaVtsycwlD0BVFuC0PQGIDDcgYpZmPzWLCpap/Fjme0DxuigpM1P+cYp4lYN0oVcY0WK
        mDHgNYwj3zCBPMM4Chjl6cdQ8EI+FNT7kKfzgq8dQarU/u53go7IDeMkZdeMkPDmGMWx66Tg6JizGKaQ
        yxReZ348R+tFlmYI2YxymIfhVg8jW+1ClsqJa+W/vhqfqR8VGnxUylwmMd/0EO9/moD3Pj6HH2Q+JIhc
        uCwaZPIgvi9zIElsB0viQLpsABkyB9gyO2PSh/PZDYoEnnH169TaL07/+X/i7GeXkFjUiyvF3Ugu6wOr
        woI0iQWp4pNsZbIVGVIb/gU0zEOIut/v5AAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="dgvExtension.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>