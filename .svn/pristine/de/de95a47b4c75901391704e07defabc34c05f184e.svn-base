//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CAPEX {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_TotalExpenseList")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_CapexTotalExpenseList : global::System.Data.DataSet {
        
        private SBP_Capex_AssetDataTable tableSBP_Capex_Asset;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_CapexTotalExpenseList() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_CapexTotalExpenseList(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SBP_Capex_Asset"] != null)) {
                    base.Tables.Add(new SBP_Capex_AssetDataTable(ds.Tables["SBP_Capex_Asset"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SBP_Capex_AssetDataTable SBP_Capex_Asset {
            get {
                return this.tableSBP_Capex_Asset;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_CapexTotalExpenseList cln = ((ds_CapexTotalExpenseList)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SBP_Capex_Asset"] != null)) {
                    base.Tables.Add(new SBP_Capex_AssetDataTable(ds.Tables["SBP_Capex_Asset"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSBP_Capex_Asset = ((SBP_Capex_AssetDataTable)(base.Tables["SBP_Capex_Asset"]));
            if ((initTable == true)) {
                if ((this.tableSBP_Capex_Asset != null)) {
                    this.tableSBP_Capex_Asset.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_TotalExpenseList";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_TotalExpenseList.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSBP_Capex_Asset = new SBP_Capex_AssetDataTable();
            base.Tables.Add(this.tableSBP_Capex_Asset);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSBP_Capex_Asset() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_CapexTotalExpenseList ds = new ds_CapexTotalExpenseList();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SBP_Capex_AssetRowChangeEventHandler(object sender, SBP_Capex_AssetRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SBP_Capex_AssetDataTable : global::System.Data.TypedTableBase<SBP_Capex_AssetRow> {
            
            private global::System.Data.DataColumn columnAssetName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnServicesDate;
            
            private global::System.Data.DataColumn columnPurchasePrice;
            
            private global::System.Data.DataColumn columnSalvageValue;
            
            private global::System.Data.DataColumn columnLifeTime;
            
            private global::System.Data.DataColumn columnNet_Value;
            
            private global::System.Data.DataColumn columnDepreciation_Rate;
            
            private global::System.Data.DataColumn columnTotal_Depreciation;
            
            private global::System.Data.DataColumn columnBalence;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Capex_AssetDataTable() {
                this.TableName = "SBP_Capex_Asset";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SBP_Capex_AssetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SBP_Capex_AssetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetNameColumn {
                get {
                    return this.columnAssetName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicesDateColumn {
                get {
                    return this.columnServicesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchasePriceColumn {
                get {
                    return this.columnPurchasePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalvageValueColumn {
                get {
                    return this.columnSalvageValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LifeTimeColumn {
                get {
                    return this.columnLifeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_ValueColumn {
                get {
                    return this.columnNet_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Depreciation_RateColumn {
                get {
                    return this.columnDepreciation_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_DepreciationColumn {
                get {
                    return this.columnTotal_Depreciation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalenceColumn {
                get {
                    return this.columnBalence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Capex_AssetRow this[int index] {
                get {
                    return ((SBP_Capex_AssetRow)(this.Rows[index]));
                }
            }
            
            public event SBP_Capex_AssetRowChangeEventHandler SBP_Capex_AssetRowChanging;
            
            public event SBP_Capex_AssetRowChangeEventHandler SBP_Capex_AssetRowChanged;
            
            public event SBP_Capex_AssetRowChangeEventHandler SBP_Capex_AssetRowDeleting;
            
            public event SBP_Capex_AssetRowChangeEventHandler SBP_Capex_AssetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSBP_Capex_AssetRow(SBP_Capex_AssetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Capex_AssetRow AddSBP_Capex_AssetRow(string AssetName, short Quantity, System.DateTime ServicesDate, double PurchasePrice, double SalvageValue, double LifeTime, double Net_Value, double Depreciation_Rate, double Total_Depreciation, double Balence) {
                SBP_Capex_AssetRow rowSBP_Capex_AssetRow = ((SBP_Capex_AssetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssetName,
                        Quantity,
                        ServicesDate,
                        PurchasePrice,
                        SalvageValue,
                        LifeTime,
                        Net_Value,
                        Depreciation_Rate,
                        Total_Depreciation,
                        Balence};
                rowSBP_Capex_AssetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSBP_Capex_AssetRow);
                return rowSBP_Capex_AssetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SBP_Capex_AssetDataTable cln = ((SBP_Capex_AssetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SBP_Capex_AssetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetName = base.Columns["AssetName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnServicesDate = base.Columns["ServicesDate"];
                this.columnPurchasePrice = base.Columns["PurchasePrice"];
                this.columnSalvageValue = base.Columns["SalvageValue"];
                this.columnLifeTime = base.Columns["LifeTime"];
                this.columnNet_Value = base.Columns["Net Value"];
                this.columnDepreciation_Rate = base.Columns["Depreciation Rate"];
                this.columnTotal_Depreciation = base.Columns["Total Depreciation"];
                this.columnBalence = base.Columns["Balence"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetName = new global::System.Data.DataColumn("AssetName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnServicesDate = new global::System.Data.DataColumn("ServicesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicesDate);
                this.columnPurchasePrice = new global::System.Data.DataColumn("PurchasePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasePrice);
                this.columnSalvageValue = new global::System.Data.DataColumn("SalvageValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalvageValue);
                this.columnLifeTime = new global::System.Data.DataColumn("LifeTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLifeTime);
                this.columnNet_Value = new global::System.Data.DataColumn("Net Value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_Value);
                this.columnDepreciation_Rate = new global::System.Data.DataColumn("Depreciation Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepreciation_Rate);
                this.columnTotal_Depreciation = new global::System.Data.DataColumn("Total Depreciation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Depreciation);
                this.columnBalence = new global::System.Data.DataColumn("Balence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalence);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Capex_AssetRow NewSBP_Capex_AssetRow() {
                return ((SBP_Capex_AssetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SBP_Capex_AssetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SBP_Capex_AssetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SBP_Capex_AssetRowChanged != null)) {
                    this.SBP_Capex_AssetRowChanged(this, new SBP_Capex_AssetRowChangeEvent(((SBP_Capex_AssetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SBP_Capex_AssetRowChanging != null)) {
                    this.SBP_Capex_AssetRowChanging(this, new SBP_Capex_AssetRowChangeEvent(((SBP_Capex_AssetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SBP_Capex_AssetRowDeleted != null)) {
                    this.SBP_Capex_AssetRowDeleted(this, new SBP_Capex_AssetRowChangeEvent(((SBP_Capex_AssetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SBP_Capex_AssetRowDeleting != null)) {
                    this.SBP_Capex_AssetRowDeleting(this, new SBP_Capex_AssetRowChangeEvent(((SBP_Capex_AssetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSBP_Capex_AssetRow(SBP_Capex_AssetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_CapexTotalExpenseList ds = new ds_CapexTotalExpenseList();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SBP_Capex_AssetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SBP_Capex_AssetRow : global::System.Data.DataRow {
            
            private SBP_Capex_AssetDataTable tableSBP_Capex_Asset;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SBP_Capex_AssetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSBP_Capex_Asset = ((SBP_Capex_AssetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetName {
                get {
                    try {
                        return ((string)(this[this.tableSBP_Capex_Asset.AssetNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetName\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.AssetNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Quantity {
                get {
                    try {
                        return ((short)(this[this.tableSBP_Capex_Asset.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServicesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSBP_Capex_Asset.ServicesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServicesDate\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.ServicesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PurchasePrice {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.PurchasePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasePrice\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.PurchasePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalvageValue {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.SalvageValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalvageValue\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.SalvageValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LifeTime {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.LifeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LifeTime\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.LifeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Net_Value {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.Net_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net Value\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.Net_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Depreciation_Rate {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.Depreciation_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depreciation Rate\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.Depreciation_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Total_Depreciation {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.Total_DepreciationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total Depreciation\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.Total_DepreciationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Balence {
                get {
                    try {
                        return ((double)(this[this.tableSBP_Capex_Asset.BalenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balence\' in table \'SBP_Capex_Asset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSBP_Capex_Asset.BalenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetNameNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.AssetNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetNameNull() {
                this[this.tableSBP_Capex_Asset.AssetNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableSBP_Capex_Asset.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicesDateNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.ServicesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicesDateNull() {
                this[this.tableSBP_Capex_Asset.ServicesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchasePriceNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.PurchasePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchasePriceNull() {
                this[this.tableSBP_Capex_Asset.PurchasePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalvageValueNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.SalvageValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalvageValueNull() {
                this[this.tableSBP_Capex_Asset.SalvageValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLifeTimeNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.LifeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLifeTimeNull() {
                this[this.tableSBP_Capex_Asset.LifeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_ValueNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.Net_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_ValueNull() {
                this[this.tableSBP_Capex_Asset.Net_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepreciation_RateNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.Depreciation_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepreciation_RateNull() {
                this[this.tableSBP_Capex_Asset.Depreciation_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_DepreciationNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.Total_DepreciationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_DepreciationNull() {
                this[this.tableSBP_Capex_Asset.Total_DepreciationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalenceNull() {
                return this.IsNull(this.tableSBP_Capex_Asset.BalenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalenceNull() {
                this[this.tableSBP_Capex_Asset.BalenceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SBP_Capex_AssetRowChangeEvent : global::System.EventArgs {
            
            private SBP_Capex_AssetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Capex_AssetRowChangeEvent(SBP_Capex_AssetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SBP_Capex_AssetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591